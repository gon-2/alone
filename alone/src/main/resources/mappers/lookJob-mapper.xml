<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper         
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"         
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.alone.mappers.lookJob">
	

	<select id="selectAll" resultType="LookJobVo">
		select * from 
		(select rownum rnum, a.* from 
      			 		 (select * from lookJob
      			 		 <include refid="jobSearch"></include>
       						 order by jobno desc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 검색 조건 -->
	<sql id="jobSearch">
		<if test="searchType != null and keyword != null">
      		<choose>
      			<when test='searchType == "t"'>
      				where company like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "c"'>
      				where content like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "tc"'>
      				where company like '%' || #{keyword} || '%'
      				or content  like '%' || #{keyword} || '%'
      			</when>
      		</choose>
      	</if>
	</sql>
	
	<select id="job_getCount" resultType="int">
		select count(*) from lookJob
	</select>
	
    <select id="getLookJob" resultType="LookJobVo">
       select * from lookJob
       where jobno = #{jobno}
       order by jobno desc
    </select>
    
    <select id="getLookJobUpload" resultType="LookJobVo">
    	select * from lookJob
    	where address = #{address}
    </select>
    
    <insert id="insertJobImages">
    	insert into job_images(job_image, jobno)
		values(#{job_image}, #{jobno})
    </insert>
    
    <select id="JobImages" resultType="LookJobVo">
    	select * from job_images
		where jobno = #{jobno}
    </select>
    
    <select id="getJobnoNextVal" resultType="int">
		select seq_jobno.nextval
		from dual
	</select>
    
    <insert id="insertJobInforMation">
    	insert into lookJob(jobno, company, employForm, companyNum, companyForm,
							representative, personInCharge, contact, fax, mail, address, department,
							work, workTime, salary, recruitmentStart, recruitmentEnd, content)
		values(#{jobno}, #{company}, #{employForm}, #{companyNum}, #{companyForm},
		#{representative}, #{personInCharge}, #{contact}, #{fax}, #{mail}, #{address}, #{department},
		#{work}, #{workTime}, #{salary}, #{recruitmentStart}, #{recruitmentEnd}, #{content})
    </insert>
    
    <select id="test_getCount" resultType="int">
    	select count(*) from test
    </select>
    
	<select id="lookJobTestList" resultType="JobTestVo">
		select tno, title, writers, to_char(sysdate, 'YYYY-MM-DD')
		test_date, to_char(sysdate, 'HH:MI') test_time from
		(select rownum rnum, a.* from 
      			 		 (select * from test
      			 		 <include refid="testSearch"></include>
       						 order by tno desc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 검색 조건 -->
	<sql id="testSearch">
		<if test="searchType != null and keyword != null">
      		<choose>
      			<when test='searchType == "t"'>
      				where title like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "w"'>
      				where writers like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "tc"'>
      				where title like '%' || #{keyword} || '%'
      				or writers  like '%' || #{keyword} || '%'
      			</when>
      		</choose>
      	</if>
	</sql>
	
	<select id="getTest" resultType="JobTestVo">
		select tno, title, writers, to_char(sysdate, 'YYYY-MM-DD')
		test_date, to_char(sysdate, 'HH:MI') test_time from test
		where tno = #{tno}
	</select>
	
	<select id="testImage" resultType="JobTestVo">
		select * from images
		where tno = #{tno}
		order by tno desc
	</select>
	
	<select id="getTnoNextVal" resultType="int">
		select seq_tno.nextval
		from dual
	</select>
	
	<insert id="insertTestRegist">
		insert into test (tno, title, writers)
		values (#{tno}, #{title}, #{writers})
	</insert>
	
	<select id="getTestUpload" resultType="JobTestVo">
    	select * from test
    	where title = #{title}
    </select>
    
    <insert id="insertTestImages">
    	insert into images(images, tno)
		values(#{images}, #{tno})
    </insert>
	
	<select id="fno_getCount" resultType="int">
    	select count(*) from find
    </select>
	
	<select id="findPositionList" resultType="FindVo">
		select * from
		(select rownum rnum, a.* from 
      			 		 (select * from find
      			 		 <include refid="findSearch"></include>
       						 order by fno desc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 검색 조건 -->
	<sql id="findSearch">
		<if test="searchType != null and keyword != null">
      		<choose>
      			<when test='searchType == "c"'>
      				where company like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "cn"'>
      				where course_name like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "ccn"'>
      				where company like '%' || #{keyword} || '%'
      				or course_name  like '%' || #{keyword} || '%'
      			</when>
      		</choose>
      	</if>
	</sql>
	
	<select id="getFind" resultType="FindVo">
		select * from find
		where fno = #{fno}
		order by fno desc
	</select>
	
	<select id="findImage" resultType="FindVo">
		select * from f_images
		where fno = #{fno}
		order by fno desc
	</select>
	
	<select id="getFnoNextVal" resultType="int">
		select seq_fno.nextval
		from dual
	</select>
	
	<insert id="insertFindRegist">
		insert into find (fno, company, fname, fday, course_name)
		values (#{fno}, #{company}, #{fname}, #{fday}, #{course_name})
	</insert>
	
	<select id="getFindUpload" resultType="FindVo">
    	select * from find
    	where company = #{company}
    	or fday = #{fday}
    	or course_name = #{course_name}
    </select>
    
    <insert id="insertFindImages">
    	insert into f_images(images, fno)
		values(#{images}, #{fno})
    </insert>
	
	<select id="referenceRoomList" resultType="ReferenceVo">
		select rno, rtitle, rwriter, recommend, hits, to_char(sysdate, 'YYYY-MM-DD')
		reference_date, to_char(sysdate, 'HH:MI') reference_time, re_group, re_seq, re_level from 
		(select rownum rnum, a.* from 
      			 		 (select * from tbl_reference
      			 		 <include refid="referenceRoomSearch"></include>
       						 order by re_group desc, re_seq asc) a)
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 검색 조건 -->
	<sql id="referenceRoomSearch">
		<if test="searchType != null and keyword != null">
      		<choose>
      			<when test='searchType == "t"'>
      				where rtitle like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "w"'>
      				where rwriter like '%' || #{keyword} || '%'
      			</when>
      			<when test='searchType == "tc"'>
      				where rtitle like '%' || #{keyword} || '%'
      				or rwriter  like '%' || #{keyword} || '%'
      			</when>
      		</choose>
      	</if>
	</sql>
	
	<update id="RRHits">
		update tbl_reference set
		hits = hits + 1
		where rno = #{rno}
	</update>
	
	<select id="getReference" resultType="ReferenceVo">
		select * from tbl_reference
		where rno = #{rno}
		order by rno desc
	</select>
	
	<select id="referenceImage" resultType="ReferenceVo">
		select r_images r_image, rno from r_file
		where rno = #{rno}
		order by rno desc
	</select>
	
	<!-- 글 갯수 -->
	<select id="r_getCount" resultType="int">
		select count(*) from tbl_reference
	</select>
	
	<select id="pageMove" resultType="ReferenceVo">
		select next,prev 
			from (
			    select rno, 
			    lead(rno,1) over(order by rno) as next, 
			    lag(rno,1) over(order by rno) as prev from tbl_reference
			)
		where rno = #{rno}
	</select>
	
	<select id="getRnoNextVal" resultType="int">
		select seq_rno.nextval
		from dual
	</select>
	
	<insert id="insertReferenceRoom">
	   	insert into tbl_reference(rno, rtitle, rwriter, recommend, hits, re_group, re_seq, re_level, r_content)
		values(#{rno}, #{rtitle}, #{rwriter}, #{recommend}, #{hits}, #{rno}, #{re_seq}, #{re_level}, #{r_content})
    </insert>
    
	<insert id="insertReferenceRoomImages">
	   	insert into r_file(r_images, rno)
		values(#{r_images}, #{rno})
    </insert>
</mapper>